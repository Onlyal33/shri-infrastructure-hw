name: Deploy
on:
  issues:
    types: [labeled]
jobs:
  check-release-label:
    runs-on: ubuntu-latest
    steps:
      - name: Check issue label and name
        id: check_label
        run: |
          echo [[ "${{ github.event.issue.title }}" =~ ^v[0-9]+$ ]]
          if ${{ contains(github.event.issue.labels.*.name, 'RELEASE')}} && [[ ${{ github.event.issue.title }} =~ ^v[0-9]+$ ]]; then
            echo "run_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "run_deploy=false" >> $GITHUB_OUTPUT
          fi
  deploy:
    needs: check-release-label
    permissions:
      contents: write
    if: ${{ needs.check-release-label.outputs.run_deploy == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
      run_id: ${{ steps.set_deployment_outputs.outputs.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - run: npm run build
      - name: deploy to gh-pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
      - name: Set deployment outputs
        id: set_deployment_outputs
        run: |
          echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT

  post-deploy:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Generate body of closing comment
        id: closing_comment
        run: |
          echo ${{ needs.deploy.outputs.run_id }}
          echo ${{ needs.deploy.outputs.url }}
          jobs=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ needs.deploy.outputs.run_id }}/jobs)
          completed_at=$(echo "$jobs" | jq -r '.jobs[] | select(.name == "deploy") | .steps[] | select(.name == "Deploy to GitHub Pages") | .completed_at')
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "body<<$EOF" >> $GITHUB_OUTPUT
          echo "Deployment info: " >> $GITHUB_OUTPUT
          echo "Link to gh-pages: ${{ needs.deploy.outputs.url }}" >> $GITHUB_OUTPUT
          echo "Deployed at: $completed_at" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Add deployment info to release issue
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            -d '{"body": ${{ toJson(steps.closing_comment.outputs.body) }}}'

      - name: Close release issue
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            -d '{"state":"closed"}'