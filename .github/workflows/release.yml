name: Release

on:
  push:
    tags:
      - 'v[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.release_issue.outputs.issue_number }}
      release_v: ${{ steps.body.outputs.current_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Generate Body
        id: body
        run: |
          current_release=$(git show -s --format="version: ${{ github.ref_name }}%nAuthor: %an%nDate: %ad" ${{ github.ref }})
          previous_tag=$(git describe --abbrev=0 --tags `git rev-list --tags='v[0-9]*' --skip=1 --max-count=1`)
          changelog=$(git log --format="%h: %s %b" $previous_tag...${{ github.ref_name }})
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "body<<$EOF" >> $GITHUB_OUTPUT
          echo "Release $current_release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Changelog:" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          echo "current_tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Get release issue number by issue name if possible
        id: r_issue
        run: |
          response=$(curl -L \
            -X GET \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues?labels=RC,RELEASE)
          echo "issue_number=$(echo "$response" | jq --arg current_tag "${{ steps.body.outputs.current_tag }}" -r 'map(select(.title==$current_tag)) | .[0].number')" >> $GITHUB_OUTPUT

      - name: Create or update release issue
        id: release_issue
        run: |
          if ${{ steps.r_issue.outputs.issue_number != null }}; then
            curl -L \
              -X PATCH \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.r_issue.outputs.issue_number }} \
              -d '{"body":${{ toJson(steps.body.outputs.body) }},"labels":["RC"]}'
            issue_number=${{ steps.r_issue.outputs.issue_number }}
          else
            response=$(curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/issues \
              -d '{"title":${{ toJson(steps.body.outputs.current_tag) }},"body":${{ toJson(steps.body.outputs.body) }},"labels":["RC"]}')
            issue_number=$(echo "$response" | jq -r '.number')
          fi

          echo "issue_number=$issue_number" >> $GITHUB_OUTPUT

  ci:
    uses: ./.github/workflows/ci.yml