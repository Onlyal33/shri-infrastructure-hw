name: Release

on:
  push:
    tags:
      - 'v[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.release_issue.outputs.issue_number }}
      release_v: ${{ steps.body.outputs.current_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Generate Body
        id: body
        run: |
          current_release=$(git show -s --format="version: ${{ github.ref_name }}%nAuthor: %an%nDate: %ad" ${{ github.ref }})
          git fetch --all --tags
          previous_tag=$(git describe --abbrev=0 --tags `git rev-list --tags='v[0-9]+' --skip=1 --max-count=1`)
          changelog=$(git log --format="%h: %s %b" $previous_tag...${{ github.ref_name }})
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "body<<$EOF" >> $GITHUB_OUTPUT
          echo "Release $current_release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Changelog:" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          echo "current_tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Create or update release issue
        id: release_issue
        run: |
          response=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues \
            -d '{"title":${{ toJson(steps.body.outputs.current_tag) }},"body":${{ toJson(steps.body.outputs.body) }},"labels":["RC"]}')
          number=$(echo "$response" | jq -r '.number')
          echo "issue_number=$number" >> $GITHUB_OUTPUT

  ci:
    uses: ./.github/workflows/ci.yml

  deploy:
    needs: [release, ci]
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
      run_id: ${{ steps.set_deployment_outputs.outputs.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Deploy to GitHub Pages
        id: deployment
        run: |
          git remote add origin https://github.com/${{ github.repository }}.git
          npm run deploy -- -m "Deploy ${{ needs.release.outputs.release_v }} to GitHub Pages"
      - name: Set deployment outputs
        id: set_deployment_outputs
        run: |
          echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT

  post-deploy:
    needs: [release, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Generate body of closing comment
        id: closing_comment
        run: |
          jobs=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ needs.deploy.outputs.run_id }}/jobs)
          completed_at=$(echo "$jobs" | jq -r '.jobs[] | select(.name == "deploy") | .steps[] | select(.name == "Deploy to GitHub Pages") | .completed_at')
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "body<<$EOF" >> $GITHUB_OUTPUT
          echo "Deployment info: " >> $GITHUB_OUTPUT
          echo "Link to gh-pages: ${{ needs.deploy.outputs.url }}" >> $GITHUB_OUTPUT
          echo "Deployed at: $completed_at" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Add deployment info to release issue
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ needs.release.outputs.issue_number }}/comments \
            -d '{"body": ${{ toJson(steps.closing_comment.outputs.body) }}}'

      - name: Close release issue
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ needs.release.outputs.issue_number }} \
            -d '{"state":"closed"}'